class Query {
public:
	
	class Compare { public:
		bool operator() (const Query* a, const Query* b) const {
			return a->extras->id < b->extras->id;
		}
	};
	
protected:
	
	// A class for holding values that are less often used.
	class QueryExtras { friend class Query;
		explicit QueryExtras(sqlite3_uint64 _id) : bind_map(0), id(_id) {}
		BindMap bind_map;
		const sqlite3_uint64 id;
	};
	
	// Constructor and destructor ensuring always-complete initialization.
	explicit Query(sqlite3_uint64 id) : extras(new QueryExtras(id)) {}
	~Query() {delete extras;}
	
	inline BindMap* BindMapPointer() {
		return &extras->bind_map;
	}
	
	QueryExtras* const extras;
};
